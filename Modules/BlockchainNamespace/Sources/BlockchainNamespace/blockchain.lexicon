blockchain:
	api:
		nabu:
			gateway:
				generate:
					session:
						headers:
						+ blockchain.db.type.map
						+ blockchain.session.state.value
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
				kyc:
				+ blockchain.namespace.napi
					tiers:
				payments:
					accounts:
					+ blockchain.namespace.napi
						simple:
							buy:
							+ blockchain.db.collection
								content:
									footer:
									+ blockchain.api.nabu.gateway.payments.accounts.simple.buy.content.type.row
									+ blockchain.db.collection
									footers:
									+ blockchain.db.type.array.of.strings
									header:
									+ blockchain.api.nabu.gateway.payments.accounts.simple.buy.content.type.row
									+ blockchain.db.collection
									headers:
									+ blockchain.db.type.array.of.strings
									section:
									+ blockchain.db.collection
										row:
										+ blockchain.api.nabu.gateway.payments.accounts.simple.buy.content.type.row
										+ blockchain.db.collection
										rows:
										+ blockchain.db.type.array.of.strings
										title:
										+ blockchain.db.type.string
									sections:
									+ blockchain.db.type.array.of.strings
									type:
										row:
											button:
												action:
												+ blockchain.db.collection
												+ blockchain.ui.type.control
												actions:
												+ blockchain.db.type.array.of.strings
												copy:
												+ blockchain.ui.type.control
												help:
												+ blockchain.ui.type.control
											copy:
											+ blockchain.db.type.boolean
											help:
											+ blockchain.db.type.string
											important:
											+ blockchain.db.type.boolean
											title:
											+ blockchain.db.type.string
											value:
											+ blockchain.db.type.string
								title:
				price:
				+ blockchain.namespace.napi
					at:
						time:
						+ blockchain.db.collection
							crypto:
							+ blockchain.db.collection
								fiat:
								+ blockchain.api.nabu.gateway.price.type
								+ blockchain.db.collection
					crypto:
					+ blockchain.db.collection
						fiat:
						+ blockchain.api.nabu.gateway.price.type
						+ blockchain.db.collection
							delta:
								since:
									yesterday:
									+ blockchain.db.type.number
					index:
					top:
						movers:
						+ blockchain.db.type.array.of.strings
					type:
						currency:
						+ blockchain.type.currency
						market:
							cap:
							+ blockchain.db.type.number
						quote:
							timestamp:
							+ blockchain.db.type.date
							value:
							+ blockchain.type.money
						volume:
						+ blockchain.db.type.number
				products:
				+ blockchain.db.collection
					ineligible:
						learn:
							more:
							+ blockchain.db.type.url
						message:
						+ blockchain.db.type.string
						reason:
						+ blockchain.db.type.string
						type:
						+ blockchain.db.type.string
					is:
						eligible:
						+ blockchain.db.type.boolean
				simple:
				+ blockchain.namespace.napi
					buy:
						currency:
						+ blockchain.session.state.value
						+ blockchain.type.currency
						pairs:
							ids:
							+ blockchain.db.type.array.of.strings
							pair:
							+ blockchain.db.collection
								buy:
									max:
									+ blockchain.type.money
									min:
									+ blockchain.type.money
								sell:
									max:
									+ blockchain.type.money
									min:
									+ blockchain.type.money
				trading:
				+ blockchain.namespace.napi
					swap:
						pairs:
						+ blockchain.db.type.array.of.strings
				user:
					tag:
						service:
							is:
								enabled:
								+ blockchain.db.type.boolean
								+ blockchain.session.configuration.value
		news:
		+ blockchain.namespace.napi
			all:
			+ blockchain.api.news.type.list
			asset:
			+ blockchain.api.news.type.list
			+ blockchain.db.collection
			type:
				article:
					assets:
					+ blockchain.db.type.array.of.strings
					author:
					+ blockchain.db.type.string
					category:
					+ blockchain.db.type.string
					date:
					+ blockchain.db.type.date
					image:
					+ blockchain.db.type.url
					link:
					+ blockchain.db.type.url
					logo:
					+ blockchain.db.type.string
					source:
					+ blockchain.db.type.string
					title:
					+ blockchain.db.type.string
				list:
					article:
					+ blockchain.api.news.type.article
					+ blockchain.db.collection
					articles:
					+ blockchain.db.type.array.of.strings
					cursor:
					+ blockchain.db.type.string
					is:
						tail:
						+ blockchain.db.type.boolean
	app:
		coin:
			core:
				load:
					pkw:
						assets:
		configuration:
			SSL:
				pinning:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			action:
			+ blockchain.db.collection
			+ blockchain.session.configuration.value
			+ blockchain.ux.type.action
			active:
				rewards:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			addresssearch:
				kyc:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			analytics:
				logging:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			announcements:
			+ blockchain.session.configuration.value
			app:
				maintenance:
				+ blockchain.db.type.any
				+ blockchain.session.configuration.value
				mode:
					defaulting:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
				superapp:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
					v1:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			apple:
				pay:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			argentinalinkbank:
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
			asset:
				chart:
					asset:
						color:
							is:
								enabled:
								+ blockchain.db.type.boolean
								+ blockchain.session.configuration.value
				coming:
					soon:
						learn:
							more:
								url:
								+ blockchain.session.configuration.value
						visit:
							web:
								app:
									url:
									+ blockchain.session.configuration.value
				recurring:
					buy:
						learn:
							more:
								url:
								+ blockchain.session.configuration.value
			buy:
				most:
					popular:
						assets:
						+ blockchain.db.type.array.of.strings
						+ blockchain.session.configuration.value
				top:
					movers:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			card:
				success:
					rate:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			customer:
				support:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
					url:
					+ blockchain.db.type.url
					+ blockchain.session.configuration.value
			dashboard:
				news:
					asset:
						filter:
						+ blockchain.db.type.array.of.strings
						+ blockchain.session.configuration.value
				top:
					movers:
						limit:
						+ blockchain.db.type.integer
						+ blockchain.session.configuration.value
			debug:
				observers:
				+ blockchain.db.type.array.of.tags
				+ blockchain.session.configuration.value
			deep_link:
				rules:
				+ blockchain.session.configuration.value
			defi:
				tabs:
				+ blockchain.db.type.array.of.tags
				+ blockchain.session.configuration.value
			dynamicselfcustody:
				assets:
				+ blockchain.db.array
				+ blockchain.session.configuration.value
				static:
					fee:
					+ blockchain.db.type.map
					+ blockchain.session.configuration.value
			evm:
				name:
					sanitize:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
				supported:
				+ blockchain.db.array
				+ blockchain.session.configuration.value
			exchange:
				walletawareness:
					prompt:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			firebase:
				project:
					id:
					+ blockchain.db.type.string
					+ blockchain.session.state.shared.value
			frequent:
				action:
				+ blockchain.db.type.any
				+ blockchain.session.configuration.value
					pkw:
					+ blockchain.db.type.any
					+ blockchain.session.configuration.value
					trading:
					+ blockchain.db.type.any
					+ blockchain.session.configuration.value
			hot:
				wallet:
					address:
						is:
							dynamic:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			kyc:
				email:
					confirmation:
						announcement:
							is:
								enabled:
								+ blockchain.db.type.boolean
								+ blockchain.session.configuration.value
				integration:
					prove:
						begin:
							verification:
								privacy:
									url:
									+ blockchain.db.type.url
									+ blockchain.session.configuration.value
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			localized:
				error:
					override:
					+ blockchain.db.type.string
					+ blockchain.session.state.value
			manual:
				login:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			new:
				swap:
					flow:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			outbound:
				request:
					interceptor:
					+ blockchain.session.configuration.value
			performance:
				tracing:
				+ blockchain.session.configuration.value
			prefill:
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
			prices:
				rising:
					fast:
						percent:
						+ blockchain.db.type.number
						+ blockchain.session.configuration.value
			profile:
				kyc:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			pubkey:
				service:
					auth:
					+ blockchain.session.state.stored.value
			recurring:
				buy:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			referral:
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
			remote:
				is:
					stale:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.preference.value
					+ blockchain.session.state.shared.value
			request:
				console:
					logging:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
			staking:
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
			stx:
				airdrop:
					users:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
				all:
					users:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			superapp:
				brokerage:
					frequent:
						actions:
						+ blockchain.db.type.any
						+ blockchain.session.configuration.value
					tabs:
					+ blockchain.app.configuration.tabs
				dashboard:
					empty:
						buy:
							amounts:
							+ blockchain.session.configuration.value
				defi:
					frequent:
						actions:
						+ blockchain.db.type.any
						+ blockchain.session.configuration.value
					tabs:
					+ blockchain.app.configuration.tabs
			swap:
				search:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
				switch:
					pkw:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			tabs:
			+ blockchain.db.type.array.of.tags
			+ blockchain.session.configuration.value
			test:
				shared:
					preference:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.preference.value
					+ blockchain.session.state.shared.value
			transaction:
			+ blockchain.db.collection
				quickfill:
					configuration:
					+ blockchain.db.array
					+ blockchain.session.configuration.value
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
				recurring:
					buy:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
				should:
					prefill:
						with:
							previous:
								amount:
								+ blockchain.db.type.boolean
								+ blockchain.session.configuration.value
			ui:
				payments:
					improvements:
						assets:
							balances:
								is:
									enabled:
									+ blockchain.db.type.boolean
									+ blockchain.session.configuration.value
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
						wallet:
							balances:
								is:
									enabled:
									+ blockchain.db.type.boolean
									+ blockchain.session.configuration.value
			unified:
				balance:
					coincore:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
							setup:
							+ blockchain.db.type.boolean
				sign_in:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			unspent:
				outputs:
					cache:
						config:
						+ blockchain.session.configuration.value
			wallet:
				connect:
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
				country:
					to:
						currency:
						+ blockchain.db.type.map
						+ blockchain.session.configuration.value
			wire:
				transfer:
				+ blockchain.db.collection
					is:
						enabled:
		deep_link:
			activity:
				transaction:
					id:
					+ blockchain.db.type.string
			asset:
				code:
				+ blockchain.db.type.string
			buy:
				amount:
				+ blockchain.db.type.integer
				crypto:
					code:
					+ blockchain.db.type.string
			dsl:
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.shared.value
			kyc:
				tier:
				+ blockchain.db.type.integer
				verify:
					email:
			onboarding:
				post:
					sign:
						up:
			plaid:
				oauth_token:
			qr:
			referral:
			send:
				amount:
				+ blockchain.db.type.integer
				crypto:
					code:
					+ blockchain.db.type.string
				destination:
				+ blockchain.db.type.string
			settings:
				add:
					payment:
						method:
							bank:
							card:
			walletconnect:
				uri:
				+ blockchain.db.type.string
		did:
			finish:
				launching:
				+ blockchain.db.type.boolean
			take:
				screenshot:
			update:
			+ blockchain.db.type.boolean
			+ blockchain.session.state.preference.value
			+ blockchain.session.state.shared.value
		dynamic:
		+ blockchain.db.collection
			session:
				state:
				+ blockchain.session.state
			ux:
				action:
				+ blockchain.session.configuration.value
				+ blockchain.ux.type.action
				analytics:
				+ blockchain.ux.type.analytics
		enter:
			into:
			+ blockchain.ux.type.story
		environment:
		+ blockchain.db.type.enum
		+ blockchain.session.state.shared.value
			debug:
			production:
		fraud:
			sardine:
				client:
					identifier:
					+ blockchain.db.type.string
					+ blockchain.session.configuration.value
				current:
					flow:
					+ blockchain.db.type.string
					+ blockchain.session.state.value
				flow:
				+ blockchain.db.type.any
				+ blockchain.session.configuration.value
				session:
				+ blockchain.db.type.string
				+ blockchain.session.state.shared.value
				+ blockchain.session.state.value
				submit:
					failure:
					success:
				supported:
					flows:
					+ blockchain.db.type.array.of.strings
					+ blockchain.session.state.value
				trigger:
				+ blockchain.db.type.any
				+ blockchain.session.configuration.value
				user:
					identifier:
					+ blockchain.db.type.string
					+ blockchain.session.state.value
		is:
			first:
				install:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.shared.value
			in:
				background:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.shared.value
			mode:
				pkw:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.value
				trading:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.value
			ready:
				for:
					deep_link:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
		launched:
			at:
				time:
				+ blockchain.db.type.date
				+ blockchain.session.state.shared.value
		mode:
		+ blockchain.session.state.preference.value
			defi:
				has:
					been:
						activated:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.preference.value
			has:
				been:
					force:
						defaulted:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.preference.value
							to:
								mode:
								+ blockchain.session.state.preference.value
		number:
			of:
				launches:
				+ blockchain.db.type.integer
				+ blockchain.session.state.preference.value
				+ blockchain.session.state.shared.value
		performance:
			trace:
				transaction:
					start:
						to:
							enter:
								amount:
		process:
			deep_link:
				error:
				+ blockchain.ux.type.analytics.error
				url:
				+ blockchain.db.type.url
				+ blockchain.session.state.value
		version:
		+ blockchain.session.state.preference.value
		+ blockchain.session.state.shared.value
		will:
			resign:
				active:
	coin:
		core:
		+ blockchain.namespace.napi
			account:
			+ blockchain.db.collection
				balance:
					available:
					+ blockchain.type.money
					pending:
					+ blockchain.type.money
					total:
					+ blockchain.type.money
				can:
					perform:
						buy:
						+ blockchain.db.type.boolean
						sell:
						+ blockchain.db.type.boolean
						swap:
						+ blockchain.db.type.boolean
				currency:
				+ blockchain.type.currency
				is:
					defi:
					+ blockchain.db.type.boolean
					funded:
					+ blockchain.db.type.boolean
					trading:
					+ blockchain.db.type.boolean
				label:
				+ blockchain.db.type.string
				network:
					asset:
					+ blockchain.db.type.string
					logo:
					+ blockchain.db.type.url
					name:
					+ blockchain.db.type.string
				receive:
					address:
					+ blockchain.db.type.string
					first:
						address:
						+ blockchain.db.type.string
					memo:
					+ blockchain.db.type.string
					qr:
						metadata:
							content:
							+ blockchain.db.type.string
							title:
							+ blockchain.db.type.string
			accounts:
				DeFi:
					all:
					+ blockchain.db.type.array.of.strings
					asset:
					+ blockchain.db.collection
					+ blockchain.db.type.array.of.strings
					with:
						balance:
						+ blockchain.db.type.array.of.strings
				active:
					rewards:
						all:
						+ blockchain.db.type.array.of.strings
						asset:
						+ blockchain.db.collection
						+ blockchain.db.type.array.of.strings
				all:
				+ blockchain.db.type.array.of.strings
				custodial:
					all:
					+ blockchain.db.type.array.of.strings
					asset:
					+ blockchain.db.collection
					+ blockchain.db.type.string
					crypto:
						all:
						+ blockchain.db.type.array.of.strings
						with:
							balance:
							+ blockchain.db.type.array.of.strings
					fiat:
					+ blockchain.db.type.array.of.strings
					with:
						balance:
						+ blockchain.db.type.array.of.strings
				interest:
					all:
					+ blockchain.db.type.array.of.strings
					asset:
					+ blockchain.db.collection
					+ blockchain.db.type.array.of.strings
				staking:
					all:
					+ blockchain.db.type.array.of.strings
					asset:
					+ blockchain.db.collection
					+ blockchain.db.type.array.of.strings
			filter:
			+ blockchain.db.collection
				accounts:
				+ blockchain.db.type.array.of.strings
	db:
		array:
		collection:
			id:
			+ blockchain.db.type.string
		field:
		leaf:
		type:
			any:
			+ blockchain.db.leaf
			array:
				of:
					booleans:
					+ blockchain.db.array
					dates:
					+ blockchain.db.array
					integers:
					+ blockchain.db.array
					maps:
					+ blockchain.db.array
					numbers:
					+ blockchain.db.array
					strings:
					+ blockchain.db.array
					tags:
					+ blockchain.db.array
					urls:
					+ blockchain.db.array
			bigint:
			+ blockchain.db.leaf
			boolean:
			+ blockchain.db.leaf
			data:
			+ blockchain.db.leaf
			date:
			+ blockchain.db.leaf
			enum:
			+ blockchain.db.leaf
			integer:
			+ blockchain.db.leaf
			map:
			+ blockchain.db.leaf
			number:
			+ blockchain.db.leaf
			string:
			+ blockchain.db.leaf
			tag:
			+ blockchain.db.leaf
				none:
			url:
			+ blockchain.db.leaf
	nabu:
		error:
			payment:
				card:
					authorization:
						declined:
						expired:
					blocked:
						suspected:
							fraud:
					declined:
						by:
							bank:
								should:
									not:
										retry:
									retry:
										immediately:
										later:
					failed:
						should:
							not:
								retry:
							retry:
								immediately:
								later:
					has:
						expired:
						insufficient:
							funds:
					information:
						cvv:
							does:
								not:
									match:
						does:
							not:
								match:
						number:
							does:
								not:
									match:
					system:
						failure:
	namespace:
		language:
			error:
			+ blockchain.ux.type.analytics.error
			state:
			+ blockchain.db.type.enum
			+ blockchain.session.state.value
				grammar:
				language:
			taskpaper:
			+ blockchain.db.type.any
			+ blockchain.session.configuration.value
		napi:
			napi:
			+ blockchain.db.collection
			+ blockchain.db.field
				data:
				+ blockchain.db.type.any
				policy:
					invalidate:
						after:
							duration:
							+ blockchain.db.type.number
						on:
						+ blockchain.db.type.array.of.tags
				subscription:
					count:
					+ blockchain.db.type.integer
		test:
			napi:
			+ blockchain.namespace.napi
				path:
					to:
						collection:
						+ blockchain.db.collection
							value:
							+ blockchain.db.type
						other:
						+ blockchain.db.type
						value:
						+ blockchain.db.type
			session:
				state:
					stored:
						shared:
							value:
							+ blockchain.session.state.shared.value
							+ blockchain.session.state.stored.value
						user:
							value:
							+ blockchain.session.state.stored.value
					value:
					+ blockchain.session.state.value
	session:
		configuration:
			value:
		event:
			did:
				sign:
					in:
					+ blockchain.ux.type.analytics.state
					out:
					+ blockchain.ux.type.analytics.state
			hidden:
			will:
				sign:
					in:
					+ blockchain.ux.type.analytics.state
					out:
					+ blockchain.ux.type.analytics.state
		state:
			key:
				value:
					pair:
						key:
						+ blockchain.type.key
						value:
						+ blockchain.db.type.any
			observers:
			+ blockchain.db.type.array.of.maps
			+ blockchain.session.configuration.value
				action:
				+ blockchain.db.type.any
				event:
					context:
					+ blockchain.db.type.map
					tag:
					+ blockchain.db.type.tag
			preference:
				value:
				+ blockchain.session.state.value
			shared:
				value:
				+ blockchain.session.state.value
			stored:
				value:
				+ blockchain.session.state.value
			value:
				alias:
				+ blockchain.db.type.tag
	type:
		currency:
		+ blockchain.db.type.string
		key:
			context:
			+ blockchain.db.type.array.of.maps
				key:
				+ blockchain.db.type.tag
				value:
				+ blockchain.db.type.string
			tag:
			+ blockchain.db.type.tag
		money:
			amount:
			+ blockchain.db.type.bigint
			currency:
			+ blockchain.type.currency
	ui:
		device:
			connection:
			+ blockchain.db.type.enum
			+ blockchain.session.state.shared.value
				WiFi:
				cellular:
				unavailable:
			current:
				local:
					time:
					+ blockchain.db.type.date
					+ blockchain.session.state.shared.value
			haptic:
				feedback:
					impact:
						heavy:
						light:
						medium:
						rigid:
						soft:
					notification:
						error:
						success:
						warning:
			id:
			+ blockchain.db.type.string
			+ blockchain.session.state.shared.value
			locale:
				language:
					code:
					+ blockchain.db.type.string
					+ blockchain.session.state.shared.value
			os:
				name:
				+ blockchain.db.type.string
				+ blockchain.session.state.shared.value
				version:
				+ blockchain.db.type.string
				+ blockchain.session.state.shared.value
			settings:
				accessibility:
					large_text:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.shared.value
		type:
			accessibility:
				children:
					are:
						grouped:
						+ blockchain.db.type.boolean
						+ sky.db.type.boolean
				hint:
				+ blockchain.db.type.string
				+ sky.db.type.string
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ sky.db.type.boolean
				label:
				+ blockchain.db.type.string
				+ sky.db.type.string
				trait:
				+ blockchain.db.type.enum
				+ sky.db.type.enum
					button:
					header:
					image:
					link:
					none:
					search:
					selected:
					static:
					updates:
						frequently:
			action:
			+ blockchain.ux.type.analytics.action
				policy:
					discard:
						if:
						+ blockchain.db.type.boolean
						when:
						+ blockchain.db.type.boolean
					perform:
						if:
						+ blockchain.db.type.boolean
						when:
						+ blockchain.db.type.boolean
				then:
					close:
					+ blockchain.db.type.boolean
					copy:
					+ blockchain.db.type.string
					emit:
					+ blockchain.db.type.tag
					enter:
						into:
						+ blockchain.db.type.tag
							detents:
							+ blockchain.db.type.enum
								automatic:
									dimension:
								large:
								medium:
								small:
							embed:
								in:
									navigation:
									+ blockchain.db.type.boolean
							grabber:
								visible:
								+ blockchain.db.type.boolean
					launch:
						url:
						+ blockchain.db.type.url
					navigate:
						to:
						+ blockchain.db.type.tag
					replace:
						current:
							stack:
							+ blockchain.db.type.array.of.tags
						root:
							stack:
							+ blockchain.db.type.array.of.tags
					set:
						session:
							state:
							+ blockchain.db.leaf
							+ blockchain.db.type.array.of.maps
								key:
								+ blockchain.db.type.tag
								value:
								+ blockchain.db.type.any
				was:
					handled:
					+ blockchain.session.event.hidden
			angle:
				degrees:
				+ blockchain.db.type.number
				radians:
				+ blockchain.db.type.number
				turns:
				+ blockchain.db.type.number
			article:
				plain:
				+ blockchain.ui.type.article.type
					body:
						pages:
						+ blockchain.db.type.array.of.maps
						+ blockchain.ui.type.page
					footer:
					header:
				type:
				+ blockchain.ui.type.state
					navigation:
					+ blockchain.ui.type.navigation
			button:
				alert:
				+ blockchain.ui.type.control
				icon:
				+ blockchain.ui.type.control
					media:
					+ blockchain.ui.type.media
				minimal:
				+ blockchain.ui.type.control
				primary:
				+ blockchain.ui.type.control
				secondary:
				+ blockchain.ui.type.control
				small:
					minimal:
					+ blockchain.ui.type.control
					primary:
					+ blockchain.ui.type.control
					secondary:
					+ blockchain.ui.type.control
			card:
			+ blockchain.ui.type.control
				footer:
				+ blockchain.ui.type.task
				icon:
			carousel:
			+ blockchain.ui.type.list
				max:
					visible:
					+ blockchain.db.type.number
			color:
				hsb:
					alpha:
					+ blockchain.db.type.number
					+ sky.db.type.number
					brightness:
					+ blockchain.db.type.number
					+ sky.db.type.number
					hue:
					+ blockchain.db.type.number
					+ sky.db.type.number
					saturation:
					+ blockchain.db.type.number
					+ sky.db.type.number
				rgb:
					alpha:
					+ blockchain.db.type.number
					+ sky.db.type.number
					blue:
					+ blockchain.db.type.number
					+ sky.db.type.number
					green:
					+ blockchain.db.type.number
					+ sky.db.type.number
					red:
					+ blockchain.db.type.number
					+ sky.db.type.number
			control:
			+ blockchain.ui.type.element
			+ sky.db.field
			+ sky.ui.type.element
				analytics:
					context:
					+ blockchain.type.key.context
				event:
					select:
					+ blockchain.ui.type.action
					swipe:
						any:
						+ blockchain.ui.type.action
						down:
						+ blockchain.ui.type.action
						horizontal:
						+ blockchain.ui.type.action
						left:
						+ blockchain.ui.type.action
						right:
						+ blockchain.ui.type.action
						up:
						+ blockchain.ui.type.action
						vertical:
						+ blockchain.ui.type.action
					tap:
					= select
					value:
						changed:
						+ blockchain.ui.type.action
						decremented:
						+ blockchain.ui.type.action
						incremented:
						+ blockchain.ui.type.action
						initialised:
						+ blockchain.ui.type.action
				select:
				= event.select
				tap:
				= event.select
				title:
				+ blockchain.ui.type.label
			element:
				accessibility:
				+ blockchain.ui.type.accessibility
				lifecycle:
					event:
						did:
							enter:
							+ sky.ux.type.analytics.impression
								state:
								+ blockchain.ux.type.analytics.state
								+ sky.ux.type.analytics.state
							exit:
							+ sky.ux.type.analytics.impression
								state:
								+ blockchain.ux.type.analytics.state
								+ sky.ux.type.analytics.state
							update:
							+ sky.ux.type.analytics.impression
								state:
								+ blockchain.ux.type.analytics.state
								+ sky.ux.type.analytics.state
				style:
				+ blockchain.ui.type.style
			gradient:
				linear:
					angle:
					+ blockchain.ui.type.angle
					steps:
					+ blockchain.db.type.array.of.maps
						color:
						+ blockchain.ui.type.color
						fraction:
						+ blockchain.db.type.number
			input:
			+ blockchain.ui.type.control
				value:
				+ blockchain.session.state.value
			label:
			+ blockchain.ui.type.element
				text:
				+ blockchain.db.type.string
			list:
				ids:
				+ blockchain.db.type.array.of.strings
				item:
				+ blockchain.db.collection
				+ blockchain.ux.type.task
			media:
			+ blockchain.ui.type.element
				url:
				+ blockchain.db.type.url
			navigation:
				bar:
					button:
						back:
						+ blockchain.ui.type.button.icon
						close:
						+ blockchain.ui.type.button.icon
			page:
				centered:
				+ blockchain.ui.type.task.section.stack.vertical
				plain:
				+ blockchain.ui.type.task.section.stack.vertical
			row:
			+ blockchain.ui.type.control
				byline:
				+ blockchain.ui.type.text
				footer:
				+ blockchain.ui.type.task
				leading:
				+ blockchain.ui.type.task
				style:
				+ blockchain.ui.type.style
				title:
				+ blockchain.ui.type.text
				trailing:
				+ blockchain.ui.type.task
			state:
			+ blockchain.ui.type.element
			+ blockchain.ux.type.analytics.state
			story:
				article:
				+ blockchain.ui.type.article
				page:
				+ blockchain.ui.type.page
				tab:
				+ blockchain.ui.type.tab
			style:
				background:
				+ blockchain.ui.type.texture
				display:
				+ blockchain.db.type.boolean
				foreground:
				+ blockchain.ui.type.texture
			tab:
				bar:
					item:
						entry:
						+ blockchain.ui.type.button.icon
						story:
						+ blockchain.db.type.tag
					items:
					+ blockchain.db.type.array.of.maps
					+ blockchain.ui.type.tab.bar.item
			task:
				paragraph:
				+ blockchain.db.field
					button:
					+ blockchain.ui.type.button
					card:
					+ blockchain.ui.type.card
					divider:
						style:
						+ blockchain.ui.type.style
					input:
					+ blockchain.ui.type.input
					label:
					+ blockchain.ui.type.text
					media:
					+ blockchain.ui.type.media
					reference:
					+ blockchain.db.type.tag
					row:
					+ blockchain.ui.type.row
				section:
				+ blockchain.db.field
					carousel:
					+ blockchain.ui.type.carousel
					list:
					+ blockchain.ui.type.list
					reference:
					+ blockchain.db.type.tag
					stack:
						horizontal:
							tasks:
							+ blockchain.db.type.array.of.maps
							+ blockchain.ui.type.task
						spacing:
						+ blockchain.db.type.number
						vertical:
							tasks:
							+ blockchain.db.type.array.of.maps
							+ blockchain.ui.type.task
			text:
				body1:
				+ blockchain.ui.type.label
				body2:
				+ blockchain.ui.type.label
				caption1:
				+ blockchain.ui.type.label
				caption2:
				+ blockchain.ui.type.label
				display:
				+ blockchain.ui.type.label
				micro:
				+ blockchain.ui.type.label
				mono:
					body:
					+ blockchain.ui.type.label
					paragraph:
					+ blockchain.ui.type.label
				overline:
				+ blockchain.ui.type.label
				paragraph1:
				+ blockchain.ui.type.label
				paragraph2:
				+ blockchain.ui.type.label
				subheading:
				+ blockchain.ui.type.label
				title1:
				+ blockchain.ui.type.label
				title2:
				+ blockchain.ui.type.label
				title3:
				+ blockchain.ui.type.label
			texture:
				color:
				+ blockchain.ui.type.color
				gradient:
				+ blockchain.ui.type.gradient
				media:
				+ blockchain.ui.type.media
	user:
	+ blockchain.db.collection
		account:
			kyc:
			+ blockchain.db.collection
				limits:
					annual:
					+ blockchain.db.type.bigint
					currency:
					+ blockchain.db.type.string
					daily:
					+ blockchain.db.type.bigint
				name:
				+ blockchain.db.type.string
				state:
				+ blockchain.db.type.enum
					expired:
					none:
					pending:
					rejected:
					under_review:
					verified:
			tier:
			+ blockchain.db.type.enum
				gold:
				none:
				platinum:
		address:
			city:
			+ blockchain.db.type.string
			country:
				code:
				+ blockchain.db.type.string
				name:
				+ blockchain.db.type.string
			line_1:
			+ blockchain.db.type.string
			line_2:
			+ blockchain.db.type.string
			postal:
				code:
				+ blockchain.db.type.string
			state:
			+ blockchain.db.type.string
		asset:
			watchlist:
			+ blockchain.db.type.array.of.strings
		creation:
			referral:
				code:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
		currency:
			available:
				currencies:
				+ blockchain.db.array
				+ blockchain.db.type.string
				+ blockchain.session.state.value
			currencies:
			+ blockchain.db.array
			+ blockchain.db.type.string
			+ blockchain.session.state.value
			default:
			+ blockchain.db.type.string
			+ blockchain.session.state.value
			preferred:
				fiat:
					display:
						currency:
						+ blockchain.session.state.value
						+ blockchain.type.currency
					trading:
						currency:
						+ blockchain.session.state.value
						+ blockchain.type.currency
		earn:
			balance:
			+ blockchain.type.money
			product:
			+ blockchain.db.collection
				all:
					assets:
					+ blockchain.db.type.array.of.strings
				asset:
				+ blockchain.db.collection
					account:
						balance:
						+ blockchain.type.money
						bonding:
							deposits:
							+ blockchain.type.money
						earning:
						+ blockchain.type.money
						locked:
						+ blockchain.type.money
						pending:
							deposit:
							+ blockchain.type.money
							interest:
							+ blockchain.type.money
							withdrawal:
							+ blockchain.type.money
						total:
							rewards:
							+ blockchain.type.money
						unbonding:
							withdrawals:
							+ blockchain.type.money
					activity:
					+ blockchain.db.type.array.of.maps
					address:
					+ blockchain.db.type.string
					is:
						eligible:
						+ blockchain.db.type.boolean
					limit:
						days:
							bonding:
							+ blockchain.db.type.integer
							unbonding:
							+ blockchain.db.type.integer
						lock:
							up:
								duration:
								+ blockchain.db.type.integer
						maximum:
							withdraw:
								value:
								+ blockchain.type.money
						minimum:
							deposit:
								value:
								+ blockchain.type.money
						reward:
							frequency:
							+ blockchain.db.type.enum
								daily:
								monthly:
								weekly:
						withdraw:
							is:
								disabled:
								+ blockchain.db.type.boolean
								pending:
								+ blockchain.db.type.boolean
					rates:
						commission:
						+ blockchain.db.type.number
						rate:
						+ blockchain.db.type.number
						trigger:
							price:
							+ blockchain.type.money
				balance:
				+ blockchain.type.money
				has:
					balance:
					+ blockchain.db.type.boolean
		email:
			address:
			+ blockchain.db.type.string
			is:
				verified:
				+ blockchain.db.type.boolean
		event:
			did:
				update:
		is:
			blocked:
			+ blockchain.db.type.boolean
			+ blockchain.session.state.value
			cassy:
				card:
					alpha:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
			cowboy:
				fan:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.value
			superapp:
				user:
				+ blockchain.session.state.value
				v1:
					user:
					+ blockchain.session.state.value
			tier:
				gold:
				+ blockchain.db.type.boolean
				none:
				+ blockchain.db.type.boolean
		name:
			first:
			+ blockchain.db.type.string
			last:
			+ blockchain.db.type.string
		pkw:
			asset:
			+ blockchain.db.collection
				balance:
				+ blockchain.type.money
				ids:
				+ blockchain.db.type.array.of.strings
				wallet:
				+ blockchain.db.collection
					balance:
					+ blockchain.type.money
			currencies:
			+ blockchain.db.type.array.of.strings
		referral:
			campaign:
			+ blockchain.session.state.value
		skipped:
			seed_phrase:
				backup:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.preference.value
		token:
			firebase:
				installation:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
			nabu:
			+ blockchain.db.type.string
			+ blockchain.session.state.value
		trading:
			account:
			+ blockchain.db.collection
				balance:
					available:
					+ blockchain.type.money
					display:
					+ blockchain.type.money
					pending:
					+ blockchain.type.money
					withdrawable:
					+ blockchain.type.money
			currencies:
			+ blockchain.db.type.array.of.strings
		wallet:
		+ blockchain.db.collection
			created:
			+ blockchain.db.type.boolean
			is:
				funded:
			was:
				created:
				+ blockchain.db.type.boolean
	ux:
		activity:
		+ blockchain.ux.type.story
			detail:
			+ blockchain.db.collection
			+ blockchain.ux.type.story
				floating:
					button:
					+ blockchain.db.collection
						tap:
						+ blockchain.ux.type.action
				model:
			row:
				button:
				+ blockchain.db.collection
					tap:
					+ blockchain.ux.type.action
		app:
			mode:
				seen:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.preference.value
				switcher:
					tapped:
					+ blockchain.ux.type.action
		asset:
		+ blockchain.db.collection
		+ blockchain.ux.type.story
			account:
			+ blockchain.db.collection
			+ blockchain.ux.type.analytics.privacy.policy.obfuscate
			+ blockchain.ux.type.story
				active:
					rewards:
						deposit:
						+ blockchain.ux.type.action
						summary:
						+ blockchain.ux.type.action
						withdraw:
						+ blockchain.ux.type.action
				activity:
				+ blockchain.ux.type.action
				buy:
				+ blockchain.ux.type.action
					recurring:
					+ blockchain.ux.type.action
						summary:
						+ blockchain.db.type.string
						+ blockchain.session.configuration.value
				coming:
					soon:
						visit:
							learn:
								more:
								+ blockchain.ux.type.action
									url:
									+ blockchain.db.type.url
									+ blockchain.session.configuration.value
							web:
								app:
								+ blockchain.ux.type.action
									url:
									+ blockchain.db.type.url
									+ blockchain.session.configuration.value
				currency:
					exchange:
					+ blockchain.ux.type.action
				error:
				+ blockchain.ux.type.analytics.error
				exchange:
					connect:
					+ blockchain.ux.type.action
					deposit:
					+ blockchain.ux.type.action
					withdraw:
					+ blockchain.ux.type.action
				explainer:
				+ blockchain.ux.type.story
					accept:
					reset:
				is:
					private_key:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
					rewards:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
					trading:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
				receive:
				+ blockchain.ux.type.action
				require:
					KYC:
					+ blockchain.ui.type.action
				rewards:
					deposit:
					+ blockchain.ux.type.action
					summary:
					+ blockchain.ux.type.action
					withdraw:
					+ blockchain.ux.type.action
				sell:
				+ blockchain.ux.type.action
				send:
				+ blockchain.ux.type.action
				sheet:
				+ blockchain.ux.type.action
				staking:
					deposit:
					+ blockchain.ux.type.action
					summary:
					+ blockchain.ux.type.action
					withdraw:
					+ blockchain.ui.type.action
				swap:
				+ blockchain.ux.type.action
					segment:
						filter:
							defi:
							+ blockchain.ux.type.story
							trading:
							+ blockchain.ux.type.story
				type:
				+ blockchain.db.type.string
			balanceInfo:
			+ blockchain.db.collection
			+ blockchain.ux.type.story
			bio:
				visit:
					website:
					+ blockchain.ux.type.action
					whitepaper:
					+ blockchain.ux.type.action
			buy:
			+ blockchain.ux.type.action
			chart:
				asset:
					color:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
				deselected:
				+ blockchain.ux.type.analytics.action
				interval:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
				selected:
				+ blockchain.ux.type.analytics.action
			error:
			+ blockchain.ux.type.analytics.error
			news:
				article:
				+ blockchain.ux.news.article
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
			receive:
			+ blockchain.ux.type.action
			recurring:
				buy:
					summary:
					+ blockchain.db.collection
					+ blockchain.ux.type.story
						cancel:
						+ blockchain.ux.type.story
							tapped:
							+ blockchain.ux.type.action
							was:
								successful:
						model:
						+ blockchain.db.type.any
					visit:
						module:
							name:
							+ blockchain.db.type.string
						website:
						+ blockchain.db.type.url
							url:
							+ blockchain.db.type.url
							+ blockchain.session.configuration.value
			refresh:
			+ blockchain.ux.type.analytics.action
			select:
			+ blockchain.ux.type.action
				origin:
				+ blockchain.session.state.value
			sell:
			+ blockchain.ux.type.action
			send:
			+ blockchain.ux.type.action
			watchlist:
				add:
				+ blockchain.ux.type.analytics.event
				is:
					on:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.value
				remove:
				+ blockchain.ux.type.analytics.event
		backup:
			seed:
				phrase:
					flow:
						backup:
							manually:
							+ blockchain.ux.type.action
							start:
							+ blockchain.ux.type.action
							success:
							+ blockchain.ux.type.action
							to:
								icloud:
								+ blockchain.ux.type.action
						skip:
						+ blockchain.ux.type.action
		buy:
			another:
				asset:
				+ blockchain.ux.type.story
					maybe:
						later:
						+ blockchain.ux.type.task
							timestamp:
							+ blockchain.db.type.date
							+ blockchain.session.state.stored.value
					select:
						target:
						+ blockchain.ux.type.story
							most:
								popular:
								+ blockchain.ux.type.task
			last:
				bought:
					asset:
					+ blockchain.session.state.value
		buy_and_sell:
		+ blockchain.ux.type.story
			buy:
			+ blockchain.ux.type.story
			sell:
			+ blockchain.ux.type.story
		currency:
			exchange:
				dex:
				+ blockchain.ux.type.story
					allowance:
						sheet:
						+ blockchain.ux.type.story
							currency:
							+ blockchain.db.type.string
						tap:
						+ blockchain.ux.type.action
						transactionId:
						+ blockchain.db.type.string
						+ blockchain.session.state.value
					error:
					+ blockchain.ux.type.task
					intro:
						did:
							show:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.preference.value
					settings:
						sheet:
						+ blockchain.ux.type.story
							slippage:
							+ blockchain.db.type.number
						slippage:
						+ blockchain.db.type.number
						+ blockchain.session.state.value
						tap:
						+ blockchain.ux.type.action
				router:
				+ blockchain.ux.type.story
			receive:
				address:
				+ blockchain.ux.type.story
					asset:
					+ blockchain.ui.type.task
					copy:
						address:
						+ blockchain.ui.device.haptic.feedback.impact.medium
						+ blockchain.ux.type.story
						domain:
						+ blockchain.ui.device.haptic.feedback.impact.medium
						+ blockchain.ux.type.story
				select:
					asset:
					+ blockchain.ux.type.story
		customer:
			support:
			+ blockchain.ux.type.story
				show:
					help:
						center:
						+ blockchain.ux.type.action
					messenger:
					+ blockchain.ux.type.action
				unread:
					count:
					+ blockchain.db.type.integer
					+ blockchain.session.state.value
		dashboard:
			announcements:
				open:
				+ blockchain.ux.type.task
			asset:
			+ blockchain.db.collection
			+ blockchain.ux.type.task
			defi:
				assets:
					small:
						balance:
							filtering:
								is:
									on:
									+ blockchain.db.type.boolean
									+ blockchain.session.state.preference.value
									+ blockchain.session.state.value
			empty:
				buy:
					bitcoin:
					+ blockchain.db.collection
					+ blockchain.ux.type.task
					other:
					+ blockchain.ux.type.task
				receive:
				+ blockchain.ux.type.task
			fiat:
				account:
					action:
						sheet:
						+ blockchain.ux.type.story
							asset:
							+ blockchain.db.type.any
								id:
								+ blockchain.db.type.any
					tap:
					+ blockchain.ux.type.action
			recurring:
				buy:
					manage:
					+ blockchain.ux.type.story
			state:
			test:
				balance:
					multiplier:
					+ blockchain.db.type.integer
					+ blockchain.session.state.stored.value
			top:
				movers:
					all:
					+ blockchain.ux.type.story
					select:
					+ blockchain.ui.type.task
			total:
				balance:
				+ blockchain.db.type.any
				+ blockchain.session.state.stored.value
				defi:
					balance:
					+ blockchain.db.type.any
					+ blockchain.session.state.stored.value
				trading:
					balance:
						info:
						+ blockchain.db.type.any
						+ blockchain.session.state.stored.value
			trading:
				assets:
					small:
						balance:
							filtering:
								is:
									on:
									+ blockchain.db.type.boolean
									+ blockchain.session.state.preference.value
									+ blockchain.session.state.value
				is:
					blocked:
					+ blockchain.ux.type.task
						contact:
							support:
							+ blockchain.ux.type.task
		defi:
			intro:
				get:
					started:
					+ blockchain.ux.type.action
				view:
		earn:
		+ blockchain.ux.type.story
			compare:
				products:
				+ blockchain.ux.type.story
					learn:
						more:
							url:
							+ blockchain.db.type.url
							+ blockchain.session.configuration.value
			did:
				appear:
			discover:
			+ blockchain.ux.earn.type.hub
				learn:
				+ blockchain.db.collection
				+ blockchain.ux.type.task
					more:
					+ blockchain.ux.type.task
						url:
						+ blockchain.db.type.url
						+ blockchain.session.configuration.value
			intro:
				did:
					show:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.preference.value
			portfolio:
			+ blockchain.ux.earn.type.hub
			product:
			summary:
				did:
					appear:
			supported:
				products:
				+ blockchain.db.type.array.of.strings
				+ blockchain.session.configuration.value
			type:
				hub:
				+ blockchain.ux.type.story
					filter:
					+ blockchain.ux.type.task
					product:
					+ blockchain.db.collection
						asset:
						+ blockchain.db.collection
						+ blockchain.ux.type.task
							is:
								new:
								+ blockchain.db.type.boolean
								+ blockchain.session.configuration.value
							no:
								balance:
								+ blockchain.ux.type.story
									buy:
									+ blockchain.ux.type.task
									receive:
									+ blockchain.ux.type.task
							summary:
							+ blockchain.ux.type.story
								add:
								+ blockchain.ux.type.task
								learn:
									more:
									+ blockchain.ux.type.task
										url:
										+ blockchain.db.type.url
										+ blockchain.session.configuration.value
								view:
									activity:
									+ blockchain.ux.type.task
								withdraw:
								+ blockchain.ux.type.task
						not:
							eligible:
							+ blockchain.ux.type.story
								go:
									back:
									+ blockchain.ux.type.task
					search:
					+ blockchain.ux.type.task
		error:
		+ blockchain.ui.device.haptic.feedback.notification.error
		+ blockchain.ux.type.action
		+ blockchain.ux.type.story
			context:
				action:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
				category:
				+ blockchain.db.type.string
				id:
				+ blockchain.db.type.string
				network:
					endpoint:
					+ blockchain.db.type.url
					error:
						code:
						+ blockchain.db.type.string
						description:
						+ blockchain.db.type.string
						id:
						+ blockchain.db.type.string
						type:
						+ blockchain.db.type.string
				source:
				+ blockchain.db.type.string
				title:
				+ blockchain.db.type.string
				type:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
			dismiss:
			+ blockchain.ux.type.task
		frequent:
			action:
			+ blockchain.ux.type.story
				brokerage:
					buy:
					+ blockchain.ux.type.action
					more:
					+ blockchain.ui.device.haptic.feedback.impact.light
					+ blockchain.ux.type.story
						actions:
						+ blockchain.db.type.any
						close:
						+ blockchain.ui.type.action
					sell:
					+ blockchain.ux.type.action
				buy:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
				currency:
					exchange:
						router:
						+ blockchain.ui.device.haptic.feedback.impact.light
						+ blockchain.ux.type.action
				defi:
					buy:
					sell:
					+ blockchain.ux.type.action
					switch:
						to:
							trading:
				deposit:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
					cash:
						identity:
							verification:
							+ blockchain.ux.type.action
				earn:
				+ blockchain.ux.type.action
				nft:
				+ blockchain.ux.type.action
				receive:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
				rewards:
				+ blockchain.ux.type.action
				sell:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
				send:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
				swap:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
				withdraw:
				+ blockchain.ui.device.haptic.feedback.impact.light
				+ blockchain.ux.type.action
		home:
		+ blockchain.db.collection
			dashboard:
			+ blockchain.ux.type.story
				announcement:
				+ blockchain.db.collection
				+ blockchain.ui.type.element
					backup:
						seed:
							phrase:
							+ blockchain.ux.type.action
					button:
					+ blockchain.ui.type.button.primary
					description:
					+ blockchain.db.type.string
					title:
					+ blockchain.db.type.string
			event:
				did:
					pull:
						to:
							refresh:
			return:
				home:
				+ blockchain.ux.type.action
			tab:
			+ blockchain.db.collection
				select:
				+ blockchain.ui.device.haptic.feedback.impact.soft
				+ blockchain.ux.type.action
		kyc:
			current:
				state:
				+ blockchain.ux.kyc.type.state
			event:
				did:
					cancel:
					+ blockchain.ux.type.analytics.event
					confirm:
						state:
						+ blockchain.ux.kyc.type.state
					enter:
						state:
						+ blockchain.ux.kyc.type.state
					fail:
						on:
							state:
							+ blockchain.ux.kyc.type.state
					finish:
					+ blockchain.ux.type.analytics.event
					start:
					+ blockchain.ux.type.analytics.event
					stop:
					+ blockchain.ux.type.analytics.event
				status:
					did:
						change:
						+ blockchain.ux.type.analytics.event
			extra:
				questions:
					context:
						observer:
						+ blockchain.session.configuration.value
					default:
						context:
						+ blockchain.db.type.string
						+ blockchain.session.configuration.value
					form:
					+ blockchain.db.collection
						data:
						+ blockchain.session.state.value
						is:
							empty:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
			tier:
			+ blockchain.db.type.enum
				gold:
				none:
				platinum:
			trading:
				limits:
					overview:
					+ blockchain.ux.type.story
				unlock:
					more:
					+ blockchain.ux.type.story
				upgrade:
				+ blockchain.ux.type.story
			type:
				state:
				+ blockchain.db.type.enum
				+ blockchain.session.state.value
					account:
						form:
						+ blockchain.ux.type.analytics.event
						status:
						+ blockchain.ux.type.analytics.event
					address:
					+ blockchain.ux.type.analytics.event
					application:
						complete:
						+ blockchain.ux.type.analytics.event
					confirm:
						email:
						+ blockchain.ux.type.analytics.event
						phone:
						+ blockchain.ux.type.analytics.event
					country:
					+ blockchain.ux.type.analytics.event
					enter:
						email:
						+ blockchain.ux.type.analytics.event
						phone:
						+ blockchain.ux.type.analytics.event
					finish:
					+ blockchain.ux.type.analytics.event
					force_gold:
					+ blockchain.ux.type.analytics.event
					profile:
					+ blockchain.ux.type.analytics.event
					resubmit:
						identity:
						+ blockchain.ux.type.analytics.event
					states:
					+ blockchain.ux.type.analytics.event
					verify:
						identity:
						+ blockchain.ux.type.analytics.event
					welcome:
					+ blockchain.ux.type.analytics.event
		maintenance:
		+ blockchain.db.collection
		+ blockchain.ux.type.story
		multiapp:
			chrome:
				switcher:
					defi:
					+ blockchain.ux.type.task
					trading:
					+ blockchain.ux.type.task
			present:
				allAssetsScreen:
				+ blockchain.ux.type.story
			wallet:
				action:
					sheet:
					+ blockchain.ux.type.action
						deposit:
						+ blockchain.ux.type.task
						withdraw:
						+ blockchain.ux.type.task
		news:
			article:
			+ blockchain.db.collection
			+ blockchain.ux.type.task
			section:
			+ blockchain.ux.type.task
				see:
					all:
					+ blockchain.ux.type.task
			story:
			+ blockchain.ux.type.story
		nft:
			asset:
			+ blockchain.db.collection
				select:
			collection:
			+ blockchain.db.collection
			+ blockchain.ux.type.story
				select:
			empty:
			+ blockchain.ux.type.story
				receive:
				+ blockchain.ux.type.task
			wallet:
			+ blockchain.db.collection
				select:
		onboarding:
			intro:
				did:
					show:
					+ blockchain.db.type.boolean
					+ blockchain.session.state.shared.value
					+ blockchain.session.state.stored.value
				event:
					show:
						sign:
							in:
							up:
						tutorial:
							defi:
							trading:
			promotion:
				cowboys:
					announcements:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
					raffle:
					+ blockchain.ux.onboarding.type.promotion
					refer:
						friends:
						+ blockchain.ux.onboarding.type.promotion
					user:
						kyc:
							is:
								under:
									review:
									+ blockchain.ux.onboarding.type.promotion
					verify:
						identity:
						+ blockchain.ux.onboarding.type.promotion
					welcome:
					+ blockchain.ux.onboarding.type.promotion
				launch:
				+ blockchain.ux.type.analytics.event
					story:
					+ blockchain.db.type.tag
					+ blockchain.session.state.value
				product:
				+ blockchain.db.collection
				+ blockchain.ux.onboarding.type.promotion
			type:
				promotion:
					announcement:
					+ blockchain.session.configuration.value
					+ blockchain.ux.type.story
						action:
						+ blockchain.ux.type.action
					story:
					+ blockchain.session.configuration.value
					+ blockchain.ux.type.story
						action:
						+ blockchain.ux.type.action
		payment:
			method:
				link:
					bank:
						wire:
					card:
				open:
					banking:
						account:
						+ blockchain.session.state.value
						authorisation:
							url:
							+ blockchain.db.type.url
							+ blockchain.session.state.value
						callback:
							base:
								url:
								+ blockchain.db.type.url
								+ blockchain.session.state.value
							path:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						consent:
							error:
							+ blockchain.session.state.value
							+ blockchain.ux.type.analytics.error
							token:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						currency:
						+ blockchain.db.type.string
						+ blockchain.session.state.value
						error:
							code:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						is:
							authorised:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
						waiting:
							for:
								bank:
								+ blockchain.ux.type.story
									cancel:
									+ blockchain.ux.type.task
									next:
									+ blockchain.ux.type.task
									ok:
									+ blockchain.ux.type.task
									retry:
									+ blockchain.ux.type.task
				plaid:
					event:
						finished:
						+ blockchain.ux.type.action
						receive:
							OAuth:
								token:
								+ blockchain.db.type.string
							link:
								token:
								+ blockchain.db.type.string
							success:
								id:
								+ blockchain.db.type.string
								token:
								+ blockchain.db.type.string
						reload:
							linked_banks:
							+ blockchain.ux.type.action
						update:
							account_id:
							+ blockchain.db.type.string
					is:
						available:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
						linking:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
				vgs:
					add:
						card:
						+ blockchain.ux.type.story
							abandoned:
							+ blockchain.ux.type.action
							completed:
							+ blockchain.ux.type.action
								card:
									data:
									+ blockchain.db.type.any
					cvv:
					+ blockchain.ux.type.story
						is:
							required:
							+ blockchain.ux.type.action
								payment:
									id:
									+ blockchain.db.type.string
									method:
										id:
										+ blockchain.db.type.string
						sent:
						+ blockchain.ux.type.action
							failed:
								with:
									error:
									+ blockchain.db.type.any
							payment:
								ids:
								+ blockchain.db.type.array.of.strings
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
					order:
					+ blockchain.db.collection
						sent:
							cvv:
							+ blockchain.db.type.boolean
							security:
							+ blockchain.db.type.boolean
					security:
						check:
						+ blockchain.ux.type.story
							sent:
							+ blockchain.ux.type.action
								payment:
									ids:
									+ blockchain.db.type.array.of.strings
				warning:
				+ blockchain.db.collection
				+ blockchain.ux.type.task
					action:
					+ blockchain.db.collection
					+ blockchain.ux.type.task
					dismiss:
					+ blockchain.ux.type.task
				wire:
					transfer:
					+ blockchain.ux.type.story
						failed:
						+ blockchain.ux.type.action
						help:
						+ blockchain.ux.type.story
		pin:
			is:
				disabled:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.value
		prices:
		+ blockchain.ux.type.story
			top:
				movers:
					select:
					+ blockchain.ui.type.task
		recurring:
			buy:
				onboarding:
				+ blockchain.ux.type.story
					asset:
					+ blockchain.db.type.string
					has:
						seen:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.preference.value
		referral:
			details:
				screen:
				+ blockchain.ux.type.story
					info:
					+ blockchain.db.type.any
			entry:
			+ blockchain.ux.type.story.entry
			giftbox:
				seen:
				+ blockchain.db.type.boolean
				+ blockchain.session.state.preference.value
		scan:
			QR:
			+ blockchain.ux.type.story
		switcher:
			entry:
			+ blockchain.ux.type.story.entry
		top:
			movers:
				element:
					percentage:
					+ blockchain.db.type.number
					position:
					+ blockchain.db.type.number
		transaction:
		+ blockchain.db.collection
		+ blockchain.ux.type.story
			action:
				add:
					account:
					bank:
					card:
				change:
					payment:
						method:
				go:
					back:
						to:
							enter:
								amount:
				reset:
				select:
					payment:
						method:
						+ blockchain.ux.type.action
							id:
							+ blockchain.db.type.string
					recurring:
						buy:
							frequency:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
								localized:
								+ blockchain.db.type.string
								+ blockchain.session.state.value
					source:
					target:
				show:
					recurring:
						buy:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
							unavailable:
					wire:
						transfer:
							instructions:
			checkout:
			+ blockchain.ux.type.story
				confirmed:
				+ blockchain.ux.type.analytics.event
				exchange:
					rate:
						disclaimer:
						+ blockchain.ux.type.action
							url:
							+ blockchain.db.type.url
							+ blockchain.session.configuration.value
				fee:
					disclaimer:
					+ blockchain.ux.type.action
						url:
						+ blockchain.db.type.url
						+ blockchain.session.configuration.value
				is:
					enabled:
					+ blockchain.db.type.boolean
					+ blockchain.session.configuration.value
				order:
				+ blockchain.db.type.any
				quote:
					brokerage:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
					refresh:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
						max:
							duration:
							+ blockchain.db.type.number
							+ blockchain.session.configuration.value
				recurring:
					buy:
						frequency:
						+ blockchain.db.type.string
						+ blockchain.session.state.value
							localized:
							+ blockchain.db.type.string
							+ blockchain.session.state.value
						invest:
							weekly:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
				refund:
					policy:
						disclaimer:
						+ blockchain.ux.type.action
							url:
							+ blockchain.db.type.url
							+ blockchain.session.configuration.value
				terms:
					of:
						service:
						+ blockchain.ux.type.action
							url:
							+ blockchain.db.type.url
							+ blockchain.session.configuration.value
						withdraw:
						+ blockchain.db.type.url
						+ blockchain.session.configuration.value
			configuration:
				link:
					a:
						card:
							credit:
								card:
									learn:
										more:
											url:
											+ blockchain.db.type.url
											+ blockchain.session.configuration.value
			details:
				button:
					copy:
					+ blockchain.ui.type.button.secondary
			disclaimer:
			+ blockchain.ux.type.story
				explain:
				+ blockchain.db.collection
				+ blockchain.ux.type.story
					learn:
						more:
						+ blockchain.ui.type.button.minimal
				finish:
				+ blockchain.ui.type.button.primary
				next:
				+ blockchain.ui.type.button.primary
			enter:
				amount:
				+ blockchain.ux.type.story
					active:
						input:
						+ blockchain.db.type.enum
						+ blockchain.session.state.value
							crypto:
							fiat:
					button:
						change:
							source:
							+ blockchain.ui.type.button.primary
							target:
							+ blockchain.ui.type.button.primary
						confirm:
						+ blockchain.ui.type.button.primary
						max:
						+ blockchain.ui.type.button.secondary
						min:
						+ blockchain.ui.type.button.secondary
					default:
						input:
							amount:
							+ blockchain.db.type.bigint
							+ blockchain.session.state.value
							currency:
								code:
								+ blockchain.db.type.string
								+ blockchain.session.state.value
					input:
					+ blockchain.ui.type.input
					output:
					+ blockchain.ui.type.input
					quick:
						fill:
							amount:
							+ blockchain.db.collection
								value:
								+ blockchain.type.money
							max:
							+ blockchain.ux.type.analytics.event
					swap:
						input:
						+ blockchain.ux.type.analytics.event
							crypto:
							+ blockchain.db.type.boolean
							fiat:
							+ blockchain.db.type.boolean
						source:
						+ blockchain.ux.type.action
							selected:
						target:
						+ blockchain.ux.type.action
							selected:
			event:
				did:
					error:
					+ blockchain.ux.type.analytics.event
					fetch:
						recurring:
							buy:
								frequencies:
								+ blockchain.session.state.value
					finish:
					+ blockchain.ux.type.analytics.event
					go:
						back:
						+ blockchain.ux.type.analytics.event
					link:
						a:
							bank:
							+ blockchain.ux.type.analytics.event
							card:
							+ blockchain.ux.type.analytics.event
						payment:
							method:
							+ blockchain.ux.type.analytics.event
					select:
						source:
						+ blockchain.ux.type.analytics.event
						target:
						+ blockchain.ux.type.analytics.event
					start:
					+ blockchain.ux.type.analytics.event
				enter:
					address:
					+ blockchain.ux.type.analytics.event
				execution:
					status:
					+ blockchain.db.type.enum
						completed:
						+ blockchain.ux.type.analytics.event
						error:
						+ blockchain.ux.type.analytics.event
						in:
							progress:
							+ blockchain.ux.type.analytics.event
						pending:
						+ blockchain.ux.type.analytics.event
						starting:
						+ blockchain.ux.type.analytics.event
				in:
					progress:
					+ blockchain.ux.type.analytics.event
				link:
					a:
						bank:
						+ blockchain.ux.type.analytics.event
						card:
						+ blockchain.ux.type.analytics.event
					payment:
						method:
						+ blockchain.ux.type.analytics.event
				select:
					amount:
					+ blockchain.ux.type.analytics
						source:
							and:
								target:
					source:
					+ blockchain.ux.type.analytics.event
					target:
					+ blockchain.ux.type.analytics.event
				should:
					show:
						disclaimer:
						+ blockchain.ux.type.action
				validate:
					source:
					+ blockchain.ux.type.analytics.event
					transaction:
					+ blockchain.ux.type.analytics.event
				will:
					finish:
					+ blockchain.ux.type.analytics.event
					start:
					+ blockchain.ux.type.analytics.event
			execution:
				status:
				+ blockchain.db.type.enum
				+ blockchain.session.state.value
			loading:
			+ blockchain.ux.type.story
				close:
				+ blockchain.ui.type.button.primary
			payment:
				method:
					is:
						ApplePay:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
						GooglePay:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
						available:
							for:
								recurring:
									buy:
									+ blockchain.db.type.boolean
									+ blockchain.session.state.value
						bank:
							ACH:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
							OpenBanking:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
						card:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
						funds:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
					link:
						a:
							bank:
								type:
								via:
									ACH:
									+ blockchain.ux.transaction.payment.method.link.a.bank.type
									+ blockchain.ux.type.story
									OpenBanking:
									+ blockchain.ux.transaction.payment.method.link.a.bank.type
									+ blockchain.ux.type.story
							card:
							+ blockchain.ux.type.story
								billing:
									address:
									+ blockchain.ux.type.story
										save:
											my:
												card:
												+ blockchain.ui.type.button.primary
								next:
								+ blockchain.ui.type.button.primary
			pending:
				transaction:
				+ blockchain.ux.type.story
					footer:
						action:
						+ blockchain.db.collection
						+ blockchain.ux.type.action
					is:
						enabled:
						+ blockchain.db.type.boolean
						+ blockchain.session.configuration.value
			previous:
				payment:
					method:
						id:
						+ blockchain.db.type.string
						+ blockchain.session.state.preference.value
			receive:
				address:
				+ blockchain.ux.type.story
					asset:
					+ blockchain.ui.type.task
			recurring:
				buy:
					button:
						tapped:
							once:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.preference.value
			select:
				source:
				+ blockchain.ux.type.story
					asset:
					+ blockchain.ux.type.task
					buy:
						most:
							popular:
							+ blockchain.ux.type.task
				target:
				+ blockchain.ux.type.story
					is:
						defi:
						+ blockchain.db.type.boolean
					most:
						popular:
						+ blockchain.ux.type.task
					other:
						tokens:
						+ blockchain.ux.type.task
					search:
					+ blockchain.ux.type.task
					top:
						movers:
						+ blockchain.ux.type.task
			smart:
				sort:
					order:
						is:
							enabled:
							+ blockchain.db.type.boolean
							+ blockchain.session.configuration.value
			source:
			+ blockchain.db.collection
				analytics:
					type:
					+ blockchain.db.type.string
					+ blockchain.session.state.value
				is:
					private:
						key:
						+ blockchain.db.type.boolean
						+ blockchain.session.state.value
				label:
				+ blockchain.db.type.string
				+ blockchain.session.state.value
				target:
				+ blockchain.db.collection
					analytics:
						type:
						+ blockchain.db.type.string
						+ blockchain.session.state.value
					count:
						of:
							completed:
							+ blockchain.db.type.integer
							+ blockchain.session.state.preference.value
					is:
						private:
							key:
							+ blockchain.session.state.value
					label:
					+ blockchain.db.type.string
					+ blockchain.session.state.value
					previous:
						did:
							error:
							+ blockchain.db.type.boolean
							+ blockchain.session.state.value
						input:
							amount:
							+ blockchain.db.type.bigint
							+ blockchain.session.state.preference.value
							currency:
								code:
								+ blockchain.db.type.string
								+ blockchain.session.state.preference.value
					quote:
					+ blockchain.session.state.value
						payment:
							method:
							+ blockchain.session.state.value
						price:
							amount:
							+ blockchain.db.type.string
							fee:
								dynamic:
								+ blockchain.db.type.string
								network:
								+ blockchain.db.type.string
							pair:
							+ blockchain.db.type.string
							price:
							+ blockchain.db.type.string
							result:
							+ blockchain.db.type.string
						profile:
						+ blockchain.session.state.value
						value:
						+ blockchain.session.state.value
			top:
				movers:
					select:
					+ blockchain.db.collection
					+ blockchain.ux.type.action
		type:
			action:
			+ blockchain.ui.type.action
			analytics:
				action:
				+ blockchain.ux.type.analytics.event
				configuration:
					firebase:
						map:
						+ blockchain.session.configuration.value
						user:
							traits:
							+ blockchain.session.configuration.value
					segment:
						map:
						+ blockchain.session.configuration.value
						user:
							traits:
							+ blockchain.session.configuration.value
				current:
					state:
					+ blockchain.db.type.tag
					+ blockchain.session.state.value
				error:
				+ blockchain.ux.type.analytics.event
					message:
				event:
					source:
						file:
						line:
				privacy:
					policy:
						exclude:
						+ blockchain.ux.type.analytics.privacy.policy
						+ sky.ux.type.analytics.privacy.policy
						include:
						+ blockchain.ux.type.analytics.privacy.policy
						+ sky.ux.type.analytics.privacy.policy
						obfuscate:
						+ blockchain.ux.type.analytics.privacy.policy
						+ sky.ux.type.analytics.privacy.policy
				state:
				+ blockchain.ux.type.analytics.event
			collection:
			story:
			+ blockchain.ui.type.story
			+ blockchain.ux.type.analytics.state
				entry:
				+ blockchain.ux.type.action
				+ blockchain.ux.type.task
			task:
			+ blockchain.ui.type.task
		user:
			KYC:
			+ blockchain.ux.type.story
			account:
			+ blockchain.ux.type.story
				airdrops:
				+ blockchain.ux.type.story
				connect:
					with:
						exchange:
						+ blockchain.ux.type.story
							connect:
				currency:
					native:
					+ blockchain.ux.type.story
						select:
					trading:
					+ blockchain.ux.type.story
						select:
				help:
					contact:
						support:
						+ blockchain.ux.type.story
					policy:
						cookie:
						+ blockchain.ux.type.story
						privacy:
						+ blockchain.ux.type.story
					terms_and_conditions:
					+ blockchain.ux.type.story
				linked:
					accounts:
						add:
							new:
							+ blockchain.ux.type.story
				notification:
					email:
					push:
				preferences:
					small:
						balances:
							are:
								hidden:
								+ blockchain.db.type.boolean
								+ blockchain.session.state.preference.value
				profile:
					email:
					+ blockchain.ux.type.story
						change:
					limits:
					+ blockchain.ux.type.story
					mobile:
						number:
						+ blockchain.ux.type.story
							verify:
					wallet:
						id:
							copy:
				rate:
					the:
						app:
						+ blockchain.ux.type.story
				security:
					backup:
						phrase:
						+ blockchain.ux.type.story
							verify:
							+ blockchain.ux.type.story
							view:
							+ blockchain.ux.type.story
							warning:
							+ blockchain.ux.type.story
					biometric:
					change:
						password:
						+ blockchain.ux.type.story
						pin:
						+ blockchain.ux.type.story
					cloud:
						backup:
							enable:
					synchronize:
						widget:
					two_factor_authentication:
						add:
						remove:
				sign:
					out:
				web:
					login:
					+ blockchain.ux.type.story
			activity:
			+ blockchain.ux.type.story
				all:
				+ blockchain.ux.type.story
					model:
			assets:
				all:
				+ blockchain.ux.type.story
					count:
					model:
			authentication:
				sign:
					in:
					+ blockchain.ux.type.story
						continue:
						+ blockchain.ui.type.button.primary
						did:
							fail:
							+ blockchain.ux.type.analytics.event
								error:
								+ blockchain.db.type.any
							succeed:
							+ blockchain.ux.type.analytics.event
						enter:
							pin:
							+ blockchain.ux.type.story
						unlock:
							wallet:
								password:
									required:
									+ blockchain.ux.type.story
					up:
					+ blockchain.ux.type.story
						create:
						+ blockchain.ui.type.button.primary
						did:
							fail:
							+ blockchain.ux.type.analytics.event
								error:
								+ blockchain.db.type.any
							succeed:
							+ blockchain.ux.type.analytics.event
			event:
				authenticated:
					pin:
					+ blockchain.ux.type.analytics.event
			experiments:
				is:
					enabled:
					+ blockchain.session.configuration.value
			nabu:
				experiment:
				+ blockchain.db.collection
					group:
					+ blockchain.db.type.integer
					+ blockchain.session.state.value
				experiments:
				+ blockchain.db.type.array.of.strings
				+ blockchain.session.state.value
			portfolio:
			+ blockchain.ux.type.story
			rewards:
			+ blockchain.ux.type.story
		wallet:
			connect:
				active:
					sessions:
					+ blockchain.db.type.any
					+ blockchain.session.state.value
				failure:
				+ blockchain.ui.type.action
				+ blockchain.ux.type.story
					message:
					+ blockchain.db.type.string
					metadata:
					+ blockchain.db.type.any
				manage:
					sessions:
					+ blockchain.ux.type.story
						analytics:
							origin:
							+ blockchain.db.type.string
						disconnect:
							all:
								failure:
								success:
				pair:
					rejected:
					+ blockchain.ui.type.action
					+ blockchain.ux.type.story
					request:
					+ blockchain.ui.type.action
					+ blockchain.ux.type.story
						accept:
						+ blockchain.ux.type.analytics.action
						+ blockchain.ux.type.task
						analytics:
							action:
							+ blockchain.db.type.string
							name:
							+ blockchain.db.type.string
						declined:
						+ blockchain.ux.type.analytics.action
						+ blockchain.ux.type.task
						proposal:
						+ blockchain.db.type.any
						+ blockchain.session.state.value
					settled:
					+ blockchain.ui.type.action
					+ blockchain.ux.type.story
						analytics:
							name:
							+ blockchain.db.type.string
						session:
						+ blockchain.db.type.any
				scan:
					qr:
					+ blockchain.ux.type.story
				session:
					details:
					+ blockchain.ux.type.story
						disconnect:
						+ blockchain.ux.type.task
							failure:
							success:
						model:
						+ blockchain.db.type.any
						name:
						+ blockchain.db.type.string
		web:
		+ blockchain.db.collection
		+ blockchain.ux.type.story
		withdrawal:
			locks:
			+ blockchain.ux.type.story
				info:
				+ blockchain.db.type.any